name: File exists action
author: Jiang Xin
description: Check file existence in a branch using GitHub API
inputs:
  repository:
    description: Repository name with owner. For example, jiangxin/file-exists-action
    required: false
    default: ${{ github.repository }}
  ref:
    description: The branch, tag or SHA to search the file path
    required: false
    default: ""
  path:
    description: File path to find in the repository
    required: true
  type:
    description: Expected type of file in the repository
    required: false
    default: file
  token:
    description: Personal access token (PAT) used to access GitHub API
    required: false
    default: ${{ github.token }}

outputs:
  exists:
    description: Return true or false for the existence of the file in repository
    value: ${{ steps.parse-api.outputs.exists }}

runs:
  using: "composite"
  steps:
    - name: Call GitHub API
      id: call-api
      shell: bash
      run: |
        url="$GITHUB_API_URL/repos/${{ inputs.repository }}/contents/${{ inputs.path }}"
        if test "${{ inputs.ref }}" != ""
        then
          url="$url?ref=${{ inputs.ref }}"
        fi
        resp=$(curl \
                --header "Content-Type: application/json" \
                --header "Accept: application/vnd.github.v3+json" \
                --header "Authorization: Bearer ${{ inputs.token }}" \
                "$url")
        # the following lines are only required for multi line json
        resp="${resp//'%'/'%25'}"
        resp="${resp//$'\n'/'%0A'}"
        resp="${resp//$'\r'/'%0D'}"
        # end of optional handling for multi line json
        echo "::set-output name=response::$resp"

    - name: Parse API result
      id: parse-api
      shell: bash
      run: |
        exists=false
        type="${{ fromJSON(steps.call-api.outputs.response)['type'] }}"
        echo "::debug::URL: $url"
        echo "::debug::Type: $type"
        if test "$type" = "${{ inputs.type }}"
        then
          exists=true
        fi
        echo "::set-output name=exists::$exists"

branding:
  icon: 'search'  
  color: 'blue'
